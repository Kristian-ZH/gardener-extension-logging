{{- define "loki.statefulset.annotations" -}}
reference.resources.gardener.cloud/configmap-{{ include "loki.config.name" . | sha256sum | trunc 8 }}: {{ include "loki.config.name" . }}
{{- if .Values.rbacSidecarEnabled }}
reference.resources.gardener.cloud/configmap-{{ include "telegraf.config.name" . | sha256sum | trunc 8 }}: {{ include "telegraf.config.name" . }}
{{- end }}
{{- end -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  namespace: {{ .Release.Namespace }}
  annotations:
{{ include "loki.statefulset.annotations" . | indent 4 }}
{{- if .Values.annotations }}
{{ toYaml .Values.annotations | indent 4 }}
{{- end }}
  labels:
{{ toYaml .Values.labels | indent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
{{ toYaml .Values.labels | indent 6 }}
  template:
    metadata:
      labels:
        networking.gardener.cloud/from-prometheus: allowed
{{- if .Values.rbacSidecarEnabled }}
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-shoot-apiserver: allowed
{{- end}}
{{ toYaml .Values.labels | indent 8 }}
      annotations:
{{ include "loki.statefulset.annotations" . | indent 8 }}
    spec:
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 10001
        fsGroupChangePolicy: "OnRootMismatch"
      priorityClassName: {{ .Values.priorityClassName }}
      containers:
{{- if .Values.rbacSidecarEnabled }}
        - name: kube-rbac-proxy
          image: {{ index .Values.images "kube-rbac-proxy" }}
          args:
          - --insecure-listen-address=0.0.0.0:{{ .Values.kubeRBACProxy.port }}
          - --upstream=http://127.0.0.1:3100/
          - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
          - --logtostderr=true
          - --v=6
          resources:
{{- toYaml .Values.resources.kubeRBACproxy | nindent 12 }}
          ports:
          - name: kube-rbac-proxy
            containerPort: {{ .Values.kubeRBACProxy.port }}
            protocol: TCP
          volumeMounts:
            - name: kubeconfig
              mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
              readOnly: true
          securityContext:
            runAsNonRoot: true
            runAsUser: 65532
            runAsGroup: 65534
        - image: {{ index .Values.images "telegraf" }}
          name: telegraf
          command:
            - "/bin/bash"
          args:
            - /etc/telegraf/start.sh
          resources:
{{- toYaml .Values.resources.telegraf | nindent 12 }}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          ports:
          - name: telegraf
            containerPort: {{ .Values.telegraf.port }}
            protocol: TCP
          volumeMounts:
            - name: telegraf-config-volume
              mountPath: /etc/telegraf/telegraf.conf
              subPath: telegraf.conf
              readOnly: true
            - name: telegraf-config-volume
              mountPath: /etc/telegraf/start.sh
              subPath: start.sh
              readOnly: true
{{- end}}
        - name: loki
          image: {{ index .Values.images "loki" }}
          args:
            - "-config.file=/etc/loki/loki.yaml"
          {{- range $key, $value := .Values.extraArgs }}
            - "-{{ $key }}={{ $value }}"
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: loki
              mountPath: "/data"
          ports:
            - name: metrics
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources.loki | nindent 12 }}
          securityContext:
{{- toYaml .Values.securityContext | nindent 12 }}
            readOnlyRootFilesystem: true
          env:
            {{- if .Values.env }}
              {{- toYaml .Values.env | nindent 12 }}
            {{- end }}
            {{- if .Values.tracing.jaegerAgentHost }}
            - name: JAEGER_AGENT_HOST
              value: "{{ .Values.tracing.jaegerAgentHost }}"
            {{- end }}
        - name: curator
          image: {{ index .Values.images "loki-curator" }}
          args:
            - "-config=/etc/loki/curator.yaml"
          ports:
          - name: metrics
            containerPort: {{ .Values.curator.port }}
            protocol: TCP
          resources:
            {{- toYaml .Values.resources.curator | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: loki
              mountPath: "/data"
          securityContext:
{{- toYaml .Values.securityContext | nindent 12 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: config
          configMap:
            name: {{ include "loki.config.name" . }}
{{- if .Values.rbacSidecarEnabled }}
        - name: kubeconfig
          projected:
            defaultMode: 420
            sources:
            - secret:
                items:
                - key: kubeconfig
                  path: kubeconfig
                name: {{ .Values.genericTokenKubeconfigSecretName }}
                optional: false
            - secret:
                items:
                - key: token
                  path: token
                name: shoot-access-kube-rbac-proxy
                optional: false
        - name: telegraf-config-volume
          configMap:
            name: {{ include "telegraf.config.name" . }}
{{- end }}
  volumeClaimTemplates:
    - metadata:
        name: loki
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.storage }}
