apiVersion: apps/v1
kind: Deployment
metadata:
  name: istiod
  namespace: {{ .Release.Namespace }}
  labels:
{{ .Values.labels | toYaml | indent 4 }}
spec:
  replicas: 2
  revisionHistoryLimit: 1
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  selector:
    matchLabels:
{{ .Values.labels | toYaml | indent 6 }}
  template:
    metadata:
      labels:
{{ .Values.labels | toYaml | indent 8 }}
      annotations:
        sidecar.istio.io/inject: "false"
        checksum/istio-config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: istiod
      securityContext:
        fsGroup: 1337
      containers:
      - name: discovery
        image: "{{ .Values.image }}"
        imagePullPolicy: IfNotPresent
        args:
        - "discovery"
        - --monitoringAddr=:15014
        - --grpcAddr=
        - --httpsAddr=:{{ .Values.ports.https }}
        - --log_output_level=all:warn,ads:error
        - --domain
        - {{ .Values.trustDomain }}
        - --plugins=authn,authz,health # remove mixer plugin
        - --keepaliveMaxServerConnectionAge
        - "30m"
        ports:
        - containerPort: 15012
          protocol: TCP
        - containerPort: {{ .Values.ports.https }}
          protocol: TCP
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 3
          timeoutSeconds: 5
        env:
        - name: JWT_POLICY
          value: third-party-jwt
        - name: PILOT_CERT_PROVIDER
          value: istiod
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.serviceAccountName
        - name: PILOT_TRACE_SAMPLING
          value: "0.1"
        - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND
          value: "false"
        - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND
          value: "false"
        - name: INJECTION_WEBHOOK_CONFIG_NAME
          value: istio-sidecar-injector
        - name: ISTIOD_ADDR
          value: istiod.{{ .Release.Namespace }}.svc:15012
        - name: VALIDATION_WEBHOOK_CONFIG_NAME
          value: istiod
        - name: PILOT_EXTERNAL_GALLEY
          value: "false"
        - name: CLUSTER_ID
          value: "Kubernetes"
        - name: EXTERNAL_ISTIOD
          value: "false"
        - name: PILOT_ENDPOINT_TELEMETRY_LABEL
          value: "true"
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 1337
          runAsGroup: 1337
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config-volume
          mountPath: /etc/istio/config
        - name: istio-token
          mountPath: /var/run/secrets/tokens
          readOnly: true
        - name: local-certs
          mountPath: /var/run/secrets/istio-dns
        - name: cacerts
          mountPath: /etc/cacerts
          readOnly: true
        - name: istio-kubeconfig
          mountPath: /var/run/secrets/remote
          readOnly: true
      volumes:
      # Technically not needed on this pod - but it helps debugging/testing SDS
      # Should be removed after everything works.
      - emptyDir:
          medium: Memory
        name: local-certs
      - name: istio-token
        projected:
          sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
      # Optional: user-generated root
      - name: cacerts
        secret:
          secretName: cacerts
          optional: true
      - name: istio-kubeconfig
        secret:
          secretName: istio-kubeconfig
          optional: true
      - name: config-volume
        configMap:
          name: istio
      priorityClassName: gardener-system-critical-migration
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                {{- range $key, $value := .Values.labels }}
                - key: {{ $key }}
                  operator: In
                  values:
                  - {{ $value }}
                {{- end }}
              topologyKey: "kubernetes.io/hostname"
